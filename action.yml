#------------------------------------------------------------------------------
# Build and push a Docker image constisting of
#   - edx-platform
#   - custom theme repository
#   - custom Open edX plugin
#   - custom Xblock
#
# see
#  - https://docs.github.com/en/actions/creating-actions/metadata-syntax-for-github-actions
#  - https://docs.github.com/en/actions/creating-actions/creating-a-composite-action
#  - https://docs.github.com/en/actions/learn-github-actions/contexts#github-context
#------------------------------------------------------------------------------
name: '"Tutor Build openedx" Action For GitHub Actions'
description: 'Use Tutor to build a Docker container of openedx, and upload to AWS ECR'
branding:
  icon: 'cloud'
  color: 'orange'
inputs:
  aws-ecr-repository:
    description: 'The name of the repository inside your AWS Elastic Container Registry (ECR) in which the newly created container will be uploaded and tagged. Defaults to "openedx"'
    required: false
    default: 'openedx'
  custom-theme-repository:
    description: 'URL for the Open edX custom theme to use for this build'
    required: false
    default: 'lpm0073/edx.custom-theme'
  custom-theme-repository-ref:
    description: 'branch or release of the Open edX custom theme'
    required: false
    default: 'master'
  custom-plugin-repository:
    description: 'URL for the Open edX custom plugin to use for this build'
    required: false
    default: 'openedx-plugin-example'
  custom-plugin-repository-organization:
    description: 'the Github organization containing the custom plugin repository to install for this build'
    required: false
    default: 'lpm0073'
  custom-plugin-repository-ref:
    description: 'branch or release of the Open edX custom plugin'
    required: false
    default: 'main'
  custom-xblock-repository:
    description: 'Repository anme of the additional XBlock repository to install for this build'
    required: false
    default: 'edx-ora2'
  custom-xblock-repository-organization:
    description: 'the Github organization containing the XBlock repository to install for this build'
    required: false
    default: 'openedx'
  custom-xblock-repository-ref:
    description: 'branch or release of the XBlock repository'
    required: false
    default: 'master'
outputs:
  docker-container-url:
    description: 'The URL of the AWS ECR Docker container that was created and uploaded'
    value: ${{ steps.docker-image.outputs.uri }}
runs:
  using: "composite"
  steps:
    - uses: actions/checkout@v2

    - name: Set up Docker Buildx
      id: setup-docker
      uses: docker/setup-buildx-action@v1

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Create the AWS ECR repository
      id: create-repository
      uses: openedx-actions/aws-ecr-create@v0.0.2
      with:
        aws-ecr-repository: ${{ inputs.aws-ecr-repository }}

    - name: Install Tutor
      id: install-tutor
      run: ./scripts/install-tutor.sh
      shell: bash

    - name: Intialize environment variables
      id: init-env
      run: |
        echo "AWS_ECR_REGISTRY=${{ steps.login-ecr.outputs.registry }}" >> ${{ github.env }}
        echo "AWS_ECR_REPOSITORY=${{ inputs.aws-ecr-repository }}" >> ${{ github.env }}
        echo "REPOSITORY_TAG=$TUTOR_VERSION-$(date +%Y%m%d%H%M)" >> ${{ github.env }}
        echo "DOCKER_IMAGE_OPENEDX=${AWS_ECR_REGISTRY}/${AWS_ECR_REPOSITORY}:${REPOSITORY_TAG}" >> ${{ github.env }}
        echo "CUSTOM_XBLOCK=${{ inputs.custom-xblock-repository }}" >> ${{ github.env }}
        echo "CUSTOM_PLUGIN=${{ inputs.custom-plugin-repository }}" >> ${{ github.env }}
      shell: bash

    - name: Initialize Docker image URI
      id: init-docker-image
      run: |
        echo "DOCKER_IMAGE_OPENEDX=${AWS_ECR_REGISTRY}/${AWS_ECR_REPOSITORY}:${REPOSITORY_TAG}" >> ${{ github.env }}
      shell: bash

    - name: Render Tutor Config
      id: tutor-config-save
      run: tutor config save --set DOCKER_IMAGE_OPENEDX=${DOCKER_IMAGE_OPENEDX}
      shell: bash

    - name: Set Tutor-dependent environment variables
      run: |
        echo "THEMES_PATH=$(tutor config printroot)/env/build/openedx/themes" >> ${{ github.env }}
        echo "PLUGINS_PATH=$(tutor config printroot)/env/build/openedx/requirements" >> ${{ github.env }}
      shell: bash

    - name: Checkout custom theme repo
      uses: actions/checkout@v2
      with:
        repository: ${{ inputs.custom-theme-repository }}
        path: ./tutor/env/build/openedx/themes/custom-edx-theme
        token: ${{ github.token }}
        ref: ${{ inputs.custom-theme-repository_ref }}

    - name: Checkout custom edx plugin repo
      uses: actions/checkout@v2
      with:
        repository: ${{ inputs.custom-plugin-repository-organization }}/${{ inputs.custom-plugin-repository }}
        path: ./tutor/env/build/openedx/requirements/${{ inputs.custom-plugin-repository }}
        token: ${{ github.token }}
        ref: ${{ inputs.custom-plugin-repository-ref }}

    - name: Checkout xblock repo
      uses: actions/checkout@v2
      with:
        repository: ${{ inputs.custom-xblock-repository-organization }}/${{ inputs.custom-xblock-repository }}
        path: ./tutor/env/build/openedx/requirements/${{ inputs.custom-xblock-repository }}
        token: ${{ github.token }}
        ref: ${{ inputs.custom-xblock-repository-ref }}

    - name: Add private.txt requirements
      id: add-requirements
      run: ./scripts/add-requirements.sh
      shell: bash

    - name: Review theme and requirements folders
      id: review-folders
      run: |
        echo "theme folder contents:"
        ls $THEMES_PATH -lha
        echo "plugins folder contents:"
        ls $PLUGINS_PATH -lha
      shell: bash

    - name: Build the image
      id: tutor-build-image
      run: tutor images build openedx
      shell: bash

    - name: Push the image
      id: docker-push-image
      run: ./scripts/upload-to-aws-ecr.sh
      shell: bash

    - name: Docker image:tag
      id: docker-image
      run: |
        echo "::set-output name=uri::$(echo $DOCKER_IMAGE_OPENEDX)"
      shell: bash
